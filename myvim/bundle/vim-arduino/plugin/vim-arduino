#!/bin/sh
#/ Usage: vim-arduino <pde file> [board] [serialport]
#/ Invokes the Arduino IDE command line runner to compile and deploy
#/ Arduino sketches.
#/

# show usage
[ $# -eq 0 -o "$1" = "--help" ] && {
    grep '^#/'< "$0" | cut -c4-
    exit 2
}

pde_file=
board="uno"
port=
switch="-c"
library_path="/Applications/Arduino.app/Contents/Resources/Java"

while [ $# -gt 0 ]
do
    case "$1" in
        -l|--library-path)
            shift
            library_path=$1
            shift
            ;;
        -s|--serialport)
            shift
            port=$1
            shift
            ;;
        -b|--board)
            shift
            board=$1
            shift
            ;;
        -d|--deploy)
            switch="-d"
            shift
            ;;
        -c|--compile)
            switch="-c"
            shift
            ;;
        *)
            if [ -z "$pde_file" ]
            then pde_file="$1"
            fi
            shift
            ;;
    esac
done

# bail out of pde file is not specified.
[ -z "$pde_file" ] && {
    echo "$(basename $0): pde_file not specified" 1>&2
    exit 1
}

# try an find a serial port automatically if one is not passsed in.
if [ -z "$port" ]
then port=$(ls /dev/tty.* | grep usb)
echo "Auto detecting serial port"
fi
if [ -z "$port" ]
then port="/dev/tty."
echo "No usb serial port found. Faking one so we can still compile."
fi

# bail out if no serial port found.
[ -z "$port" ] && {
    echo "$(basename $0): serial port not specified" 1>&2
    exit 1
}

# bail out if no board specified.
[ -z "$board" ] && {
    echo "$(basename $0): board not specified" 1>&2
    exit 1
}

echo "Compiling '$pde_file' for board $board on serial port $port"

sketchbook=$(echo $HOME/Documents/Arduino)

DIR="$( cd "$( dirname "$0" )" && pwd )"
java \
  -Djava.library.path="$library_path" \
  -Darduino.sketchbook="$sketchbook" \
  -Djava.awt.headless=true \
  -jar "$DIR/vim-arduino-cli.jar" "$switch" "$pde_file" "$port" "$board"
